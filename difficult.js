/* n개의 문에 대해 처음에는 모든 문을 다 열고, 그 다음에는 2의 배수에 존재하는 문(2,4,6)에 대해 닫고
그 다음에는 3의 배수에 존재하는 문(3,6,9)에 대해 닫는다, 이 때 닫혀있는 문이라면 열도록 한다
이 때 임의의 n에 대해 열려있는 문의 갯수를 반환하는 코드를 제작
이 문제의 경우 n을 입력받아 n개의 갯수만큼 배열을 만들어 반복문을 사용해 
해당 숫자마다 0,1로 구분해 열고 닫는 걸 구분해도 되지만
로직을 생각해보면 각 제곱의 수마다 문이 열린다는 것을 알 수 있다
예를 들어 n이 4일 경우 1 0 0 1되어 홀수번 만큼 문이 열릴 때 열린 문이 되는데
각 약수마다 문이 열린다치면 홀수개의 약수를 가진 숫자가 있을 때마다 열린 문이 남는다는 의미이므로
홀수개의 약수를 가진 1, 4, 9, 16 등은 모두 제곱수라는 것을 알 수 있다
그러므로 반복문에 사용할 i가 n의 제곱근보다 작은 동안 i를 제곱했을 때 정수인 수를 모두 찾아내면 완성
*/

function solution(n) {
  let tmp = 0;
  let i = 1;
  while (i <= Math.sqrt(n)) {
    if (Math.pow(i, 2) % 1 === 0) {
      tmp++;
    }
    i++;
  }
  return tmp;
}
